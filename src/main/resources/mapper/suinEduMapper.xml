<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @mapper로 설정된 경로 입력  -->        
<mapper namespace="com.metanet.persistence.suinEduMapper">
    <insert id="eduInsert" parameterType="com.metanet.domain.EduVO">
        INSERT INTO edu
        VALUES (seq_edu_no.nextval, 
        		#{eduTitle}, 
        		#{eduDesc}, 
        		#{eduLoc}, 
        		#{eduTime}, 
        		#{eduTeacher}, 
        		#{eduPeople}, 
        		#{eduTarget}, 
        		#{eduStart}, 
        		#{eduEnd}, 
        		#{eduCost},
        		0)
    </insert>
    
    <select id="eduHistorySelect" resultType="com.metanet.domain.AttendanceVO">
	     <![CDATA[
	    	select h.edu_hisno, 
	    		   to_char(e.edu_start,'yyyymmdd') as edu_start, 
	    		   to_char(e.edu_end,'yyyymmdd') as edu_end, 
	    		   h.attendance 
	    	from edu_history h, edu e
	    	where h.edu_no = e.edu_no
	    	and attendance < 100 
	    	and edu_start < sysdate
	    ]]>
    </select>
    
    <update id="eduAttendanceUpdate" parameterType="java.util.List">
    	<foreach item="item" collection="list" separator=";" open="DECLARE BEGIN" close="; END;">
    		update edu_history
    		 set attendance = #{item.attendance}
    		 where edu_hisno = #{item.eduHisno}
    	</foreach>
    </update>
    
    <select id="eduHistoryListSelect" resultType="com.metanet.domain.EduHistoryVO">
    	select d.edu_title, e.emp_no, e.emp_name, h.attendance, h.score
    	from employee e, edu d, edu_history h
    	where e.emp_no = h.emp_no
    	and d.edu_no = h.edu_no
    </select>
    
    <select id="eduHistoryListSelectByKey" parameterType="Map" resultType="com.metanet.domain.EduHistoryVO">
    	select d.edu_title, e.emp_no, e.emp_name, h.attendance, h.score
    	from employee e, edu d, edu_history h
    	where e.emp_no = h.emp_no
    	and d.edu_no = h.edu_no
    	<choose>
    		<when test='"eduTitle".equals(keyField) '>
    			and d.edu_title like '%' || #{keyword} || '%'
    		</when>
    		<when test='"empNo".equals(keyField) '>
    			and h.emp_no = #{keyword}
    		</when>
    		<when test='"empName".equals(keyField) '>
    			and e.emp_name like '%' || #{keyword} || '%'
    		</when>
    	</choose>
    </select>
</mapper>	